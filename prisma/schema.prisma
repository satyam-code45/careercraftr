generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  clerkUserId     String            @unique
  email           String            @unique
  name            String
  imageUrl        String?
  industry        String?
  industryInsight IndustryInsights? @relation(fields: [industry], references: [industry])
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  bio        String?
  experience Int?
  skills     String[]

  assessments Assessment[]
  resume      Resume?
  coverLetter CoverLetter[]
}

model Assessment {
  id             String   @id @default(uuid())
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  quizScore      Float
  questions      Json[]
  category       String
  improvementTip String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([userId])
}

model Resume {
  id        String   @id @default(uuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  content   String   @db.Text
  atsScore  Float?
  feedback  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CoverLetter {
  id             String   @id @default(uuid())
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  content        String
  jobDescription String?
  companyName    String
  jobTitle       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([userId])
}

model IndustryInsights {
  id       String @id @default(cuid())
  industry String @unique

  //all user in this particular industry
  users User[]

  //salary data
  salaryRanges Json[] //Array of{role:string, min:float, max:float, median:float, location:string?}

  //indusrty trends 
  growthRate  Float //industry growth rate
  demandLevel String //high,medium,low
  topSkills   String[] //most in-demand skills

  //market conditions
  marketOutlook String //positive,netural,negative
  keyTrends     String[] //array of current industry trends

  //learning suggestions
  recommendedSkills String[]

  lastUpdated DateTime @default(now())
  nextUpdate  DateTime

  @@index([industry])
}

enum DemandLevel {
  HIGH
  MEDIUM
  LOW
}

enum marketOutlook {
  positive
  negative
  netural
}
